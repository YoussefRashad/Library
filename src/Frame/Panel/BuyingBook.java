/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame.Panel;

import DataFile.Book;
import DataFile.Category;
import DataFile.Client;
import DataFile.Transaction;
import Safety.Validation;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.print.Printer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
/**
 *
 * @author DELL
 */
public class BuyingBook extends javax.swing.JPanel {
    private ArrayList<Integer>Book_Count = new ArrayList<Integer>();

    /**
     * Creates new form BuyingBook
     */
    public BuyingBook() {
        initComponents();
        jPanelWrongPassword.setVisible(false);
        jPanelWrongEmail.setVisible(false);
        jSpinnerIncreaseQuantity.setEnabled(false);
        jSpinnerDecreaseQuanatity.setEnabled(false);
        String NameOfCategory[] = new Category().ListNameAllCategoryReport();
        for(int i=0;i<NameOfCategory.length;i++)
            jComboBoxNameOfCategory.addItem(NameOfCategory[i]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jLabelSuccessOrFail = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxNameOfCategory = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldIDBook = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerIncreaseQuantity = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxItems = new javax.swing.JComboBox<>();
        jTextFieldAddListQuantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerDecreaseQuanatity = new javax.swing.JSpinner();
        jTextFieldSalary = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jPasswordFieldPass = new javax.swing.JPasswordField();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanelLogIn = new javax.swing.JPanel();
        jLabelLogIn = new javax.swing.JLabel();
        jPanelAddItem = new javax.swing.JPanel();
        jLabelAddItem = new javax.swing.JLabel();
        jPanelOk = new javax.swing.JPanel();
        jLabelOk = new javax.swing.JLabel();
        jPanelReset = new javax.swing.JPanel();
        jLabelReset = new javax.swing.JLabel();
        jPanelWrongPassword = new javax.swing.JPanel();
        jLabelWrongPassword = new javax.swing.JLabel();
        jPanelWrongEmail = new javax.swing.JPanel();
        jLabelWrongEmail = new javax.swing.JLabel();
        jPanelDecreaseQuantity = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelBuyingBooks = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanelRemoveItem = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(105, 105, 105));

        jLabelSuccessOrFail.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelSuccessOrFail.setForeground(new java.awt.Color(255, 255, 255));
        jLabelSuccessOrFail.setText("Buying Books ...!");

        jLabel2.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name Of Category");

        jComboBoxNameOfCategory.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jComboBoxNameOfCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBoxNameOfCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNameOfCategoryActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Add By ID Book ");

        jTextFieldIDBook.setEditable(false);
        jTextFieldIDBook.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Quantity");

        jSpinnerIncreaseQuantity.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Items");

        jComboBoxItems.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jComboBoxItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        jComboBoxItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxItemsActionPerformed(evt);
            }
        });

        jTextFieldAddListQuantity.setEditable(false);
        jTextFieldAddListQuantity.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jTextFieldAddListQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddListQuantityActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Quantity");

        jSpinnerDecreaseQuanatity.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        jTextFieldSalary.setEditable(false);
        jTextFieldSalary.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Salary");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDBook", "NameBook", "Author", "DOPublisher", "Salary", "ID Category", "SubSection", "Section"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPasswordFieldPass.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N

        jTextFieldEmail.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Email");

        jLabel10.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Password");

        jPanelLogIn.setBackground(new java.awt.Color(105, 105, 105));
        jPanelLogIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelLogInMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelLogInMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelLogInMouseExited(evt);
            }
        });

        jLabelLogIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Login_48px.png"))); // NOI18N
        jLabelLogIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLogInMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelLogInMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelLogInMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelLogInLayout = new javax.swing.GroupLayout(jPanelLogIn);
        jPanelLogIn.setLayout(jPanelLogInLayout);
        jPanelLogInLayout.setHorizontalGroup(
            jPanelLogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLogInLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelLogIn)
                .addGap(10, 10, 10))
        );
        jPanelLogInLayout.setVerticalGroup(
            jPanelLogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLogInLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelLogIn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAddItem.setBackground(new java.awt.Color(105, 105, 105));
        jPanelAddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelAddItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelAddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelAddItemMouseExited(evt);
            }
        });

        jLabelAddItem.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jLabelAddItem.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Add_Shopping_Cart_35px.png"))); // NOI18N
        jLabelAddItem.setText("Add Item");
        jLabelAddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAddItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelAddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelAddItemMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddItemLayout = new javax.swing.GroupLayout(jPanelAddItem);
        jPanelAddItem.setLayout(jPanelAddItemLayout);
        jPanelAddItemLayout.setHorizontalGroup(
            jPanelAddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelAddItem)
                .addGap(10, 10, 10))
        );
        jPanelAddItemLayout.setVerticalGroup(
            jPanelAddItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddItemLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabelAddItem)
                .addGap(0, 0, 0))
        );

        jPanelOk.setBackground(new java.awt.Color(105, 105, 105));
        jPanelOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelOkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelOkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelOkMouseExited(evt);
            }
        });

        jLabelOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Checkmark_48px.png"))); // NOI18N
        jLabelOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelOkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelOkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelOkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelOkLayout = new javax.swing.GroupLayout(jPanelOk);
        jPanelOk.setLayout(jPanelOkLayout);
        jPanelOkLayout.setHorizontalGroup(
            jPanelOkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOkLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelOk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOkLayout.setVerticalGroup(
            jPanelOkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOkLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelOk)
                .addGap(10, 10, 10))
        );

        jPanelReset.setBackground(new java.awt.Color(105, 105, 105));
        jPanelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelResetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelResetMouseExited(evt);
            }
        });

        jLabelReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Reset_48px.png"))); // NOI18N
        jLabelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelResetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelResetMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelResetLayout = new javax.swing.GroupLayout(jPanelReset);
        jPanelReset.setLayout(jPanelResetLayout);
        jPanelResetLayout.setHorizontalGroup(
            jPanelResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResetLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelReset)
                .addGap(10, 10, 10))
        );
        jPanelResetLayout.setVerticalGroup(
            jPanelResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResetLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelReset)
                .addGap(10, 10, 10))
        );

        jPanelWrongPassword.setBackground(new java.awt.Color(105, 105, 105));

        jLabelWrongPassword.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelWrongPassword.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWrongPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Close Window_20px.png"))); // NOI18N
        jLabelWrongPassword.setText("Wrong Password");

        javax.swing.GroupLayout jPanelWrongPasswordLayout = new javax.swing.GroupLayout(jPanelWrongPassword);
        jPanelWrongPassword.setLayout(jPanelWrongPasswordLayout);
        jPanelWrongPasswordLayout.setHorizontalGroup(
            jPanelWrongPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongPasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWrongPassword)
                .addGap(0, 0, 0))
        );
        jPanelWrongPasswordLayout.setVerticalGroup(
            jPanelWrongPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongPasswordLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabelWrongPassword)
                .addGap(0, 0, 0))
        );

        jPanelWrongEmail.setBackground(new java.awt.Color(105, 105, 105));

        jLabelWrongEmail.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelWrongEmail.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWrongEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Close Window_20px.png"))); // NOI18N
        jLabelWrongEmail.setText("Wrong Email");

        javax.swing.GroupLayout jPanelWrongEmailLayout = new javax.swing.GroupLayout(jPanelWrongEmail);
        jPanelWrongEmail.setLayout(jPanelWrongEmailLayout);
        jPanelWrongEmailLayout.setHorizontalGroup(
            jPanelWrongEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongEmailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelWrongEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelWrongEmailLayout.setVerticalGroup(
            jPanelWrongEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongEmailLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabelWrongEmail)
                .addGap(0, 0, 0))
        );

        jPanelDecreaseQuantity.setBackground(new java.awt.Color(105, 105, 105));
        jPanelDecreaseQuantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDecreaseQuantityMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelDecreaseQuantityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelDecreaseQuantityMouseExited(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Minus_35px.png"))); // NOI18N
        jLabel1.setText("Decrease Quantity");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelDecreaseQuantityLayout = new javax.swing.GroupLayout(jPanelDecreaseQuantity);
        jPanelDecreaseQuantity.setLayout(jPanelDecreaseQuantityLayout);
        jPanelDecreaseQuantityLayout.setHorizontalGroup(
            jPanelDecreaseQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecreaseQuantityLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(10, 10, 10))
        );
        jPanelDecreaseQuantityLayout.setVerticalGroup(
            jPanelDecreaseQuantityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecreaseQuantityLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jPanelBuyingBooks.setBackground(new java.awt.Color(105, 105, 105));
        jPanelBuyingBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelBuyingBooksMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelBuyingBooksMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelBuyingBooksMouseExited(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Expensive_Price__96px.png"))); // NOI18N
        jLabel4.setText("Buyig Books");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuyingBooksLayout = new javax.swing.GroupLayout(jPanelBuyingBooks);
        jPanelBuyingBooks.setLayout(jPanelBuyingBooksLayout);
        jPanelBuyingBooksLayout.setHorizontalGroup(
            jPanelBuyingBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );
        jPanelBuyingBooksLayout.setVerticalGroup(
            jPanelBuyingBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuyingBooksLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addGap(10, 10, 10))
        );

        jPanelRemoveItem.setBackground(new java.awt.Color(105, 105, 105));
        jPanelRemoveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseExited(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Monotype Corsiva", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Clear_Symbol_35px.png"))); // NOI18N
        jLabel11.setText("Remove Item");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel11MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelRemoveItemLayout = new javax.swing.GroupLayout(jPanelRemoveItem);
        jPanelRemoveItem.setLayout(jPanelRemoveItemLayout);
        jPanelRemoveItemLayout.setHorizontalGroup(
            jPanelRemoveItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRemoveItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addGap(10, 10, 10))
        );
        jPanelRemoveItemLayout.setVerticalGroup(
            jPanelRemoveItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRemoveItemLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel11)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 958, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEmail)
                            .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelWrongPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelWrongEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jPanelLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSuccessOrFail, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(36, 36, 36)
                                .addComponent(jComboBoxNameOfCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38)
                        .addComponent(jPanelOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jPanelBuyingBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldIDBook, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldAddListQuantity)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerIncreaseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerDecreaseQuanatity, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelDecreaseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanelRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelSuccessOrFail)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jComboBoxNameOfCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanelOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(jPanelWrongEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanelWrongPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldIDBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerIncreaseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6))
                            .addGap(11, 11, 11))
                        .addComponent(jPanelAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldAddListQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jSpinnerDecreaseQuanatity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanelRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelDecreaseQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelBuyingBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextFieldSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void setTable(String Category)
    {
        resetTable();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        Book b = new Book();
        ArrayList<Book> books = b.listSpecificCategory(Category);
        Object[]rowData = new Object[8];
        for(Book bo : books)
        {
            rowData[0]=bo.getIDBook();
            rowData[1]=bo.getNameBook();
            rowData[2]=bo.Author.getNamePublisher();
            String DOB[]=bo.Author.getDOPublisher().split("#");
            rowData[3]=DOB[2]+"/"+DOB[1]+"/"+DOB[0];
            rowData[4]=bo.getSalary();
            rowData[5]=bo.cat.getIDCategory();
            rowData[6]=bo.cat.ss.getSubSectionName();
            rowData[7]=bo.cat.ss.sec.getSectionID();
            model.addRow(rowData);
        }
    }
    private void jComboBoxNameOfCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNameOfCategoryActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBoxNameOfCategoryActionPerformed

    private void jComboBoxItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxItemsActionPerformed
        // TODO add your handling code here:
        if(Book_Count.size()!=0)
            jTextFieldAddListQuantity.setText(""+Book_Count.get(jComboBoxItems.getSelectedIndex()));
    }//GEN-LAST:event_jComboBoxItemsActionPerformed

    private void jLabelOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOkMouseClicked
        // TODO add your handling code here:
        setTable(jComboBoxNameOfCategory.getSelectedItem().toString());
    }//GEN-LAST:event_jLabelOkMouseClicked

    private void jLabelOkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOkMouseEntered
        // TODO add your handling code here:
        jPanelOk.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelOkMouseEntered

    private void jLabelOkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelOkMouseExited
        // TODO add your handling code here:
        jPanelOk.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelOkMouseExited

    private void jPanelOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOkMouseClicked
        // TODO add your handling code here:
        if(jComboBoxNameOfCategory.getItemCount()!=0){
            setTable(jComboBoxNameOfCategory.getSelectedItem().toString());
        }
        else
            jLabelSuccessOrFail.setText("Not Exsit Categories in System :(");
    }//GEN-LAST:event_jPanelOkMouseClicked

    private void jPanelOkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOkMouseEntered
        // TODO add your handling code here:
        jPanelOk.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelOkMouseEntered

    private void jPanelOkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelOkMouseExited
        // TODO add your handling code here:
        jPanelOk.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelOkMouseExited

    private void jLabelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseClicked
        // TODO add your handling code here:
        resetPanel();
        jLabelSuccessOrFail.setText("Buying Books ...!");
        resetTable();
    }//GEN-LAST:event_jLabelResetMouseClicked

    private void jLabelResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseEntered
        // TODO add your handling code here:
        jPanelReset.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelResetMouseEntered

    private void jLabelResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseExited
        // TODO add your handling code here:
        jPanelReset.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelResetMouseExited

    private void jPanelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseClicked
        // TODO add your handling code here:
        resetPanel();
        jLabelSuccessOrFail.setText("Buying Books ...!");
        resetTable();
    }//GEN-LAST:event_jPanelResetMouseClicked

    private void jPanelResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseEntered
        // TODO add your handling code here:
        jPanelReset.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelResetMouseEntered

    private void jPanelResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseExited
        // TODO add your handling code here:
        jPanelReset.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelResetMouseExited

    private void jLabelLogInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogInMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.getText().equals("")&&!jPasswordFieldPass.getText().equals("")){
            if(jComboBoxNameOfCategory.getItemCount()!=0){
                if(new Validation().checkEmail(jTextFieldEmail.getText())){
                    if(new Validation().checkPass(jPasswordFieldPass.getText())){
                        Client c = new Client();
                        if(c.LogIn(jTextFieldEmail.getText(), jPasswordFieldPass.getText())){
                            EnableComponant();
                            jLabelSuccessOrFail.setText("Founded Client ;)");
                        }
                        else{
                            jLabelSuccessOrFail.setText("Not Found Client  :(");
                            JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                            jPanelWrongEmail.setVisible(true);
                            jPanelWrongPassword.setVisible(true);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Not valid Email Try Again :(");
                        jPanelWrongEmail.setVisible(true);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Not valid Password length ,Should it Length\nis more than 6 OR Password has (*,/,=,+,...)\n                    Try Again :(");
                    jPanelWrongPassword.setVisible(true);
                }
        
            }
            else{
                    jLabelSuccessOrFail.setText("Not Exsit Category in System :(");
                    JOptionPane.showMessageDialog(null, "Not Exsit Category in System Try Again :(");
                }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required Fields ... !  Please, complete them before submit ...! :(");
    }//GEN-LAST:event_jLabelLogInMouseClicked

    private void jLabelLogInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogInMouseEntered
        // TODO add your handling code here:
        jPanelLogIn.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelLogInMouseEntered

    private void jLabelLogInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogInMouseExited
        // TODO add your handling code here:
        jPanelLogIn.setBackground(new Color(105, 105, 105));
    }//GEN-LAST:event_jLabelLogInMouseExited

    private void jPanelLogInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelLogInMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.getText().equals("")&&!jPasswordFieldPass.getText().equals("")){
            if(jComboBoxNameOfCategory.getItemCount()!=0){
                if(new Validation().checkEmail(jTextFieldEmail.getText())){
                    if(new Validation().checkPass(jPasswordFieldPass.getText())){
                        Client c = new Client();
                        if(c.LogIn(jTextFieldEmail.getText(), jPasswordFieldPass.getText())){
                            EnableComponant();
                            jLabelSuccessOrFail.setText("Founded Client ;)");
                        }
                        else{
                            jLabelSuccessOrFail.setText("Not Found Client  :(");
                            JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                            jPanelWrongEmail.setVisible(true);
                            jPanelWrongPassword.setVisible(true);
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Not valid Email Try Again :(");
                        jPanelWrongEmail.setVisible(true);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Not valid Password length ,Should it Length\nis more than 6 OR Password has (*,/,=,+,...)\n                    Try Again :(");
                    jPanelWrongPassword.setVisible(true);
                }
        
            }
            else{
                    jLabelSuccessOrFail.setText("Not Exsit Category in System :(");
                    JOptionPane.showMessageDialog(null, "Not Exsit Category in System Try Again :(");
                }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required Fields ... !  Please, complete them before submit ...! :(");
    }//GEN-LAST:event_jPanelLogInMouseClicked

    private void jPanelLogInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelLogInMouseEntered
        // TODO add your handling code here:
        jPanelLogIn.setBackground(new Color(0, 102, 102));
    }//GEN-LAST:event_jPanelLogInMouseEntered

    private void jPanelLogInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelLogInMouseExited
        // TODO add your handling code here:
        jPanelLogIn.setBackground(new Color(0, 0, 0));
    }//GEN-LAST:event_jPanelLogInMouseExited

    private void jLabelAddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(!jTextFieldIDBook.getText().equals(""))
            {
                if(new Validation().checkID(jTextFieldIDBook.getText())){
                    if(((int)jSpinnerIncreaseQuantity.getNextValue()-1)>0){
                        Book b = new Book();
                        if(b.SearchFor(Integer.parseInt(jTextFieldIDBook.getText()))){
                            /*
                            int Quantity = inven.SearchForQuantityOFBook(Integer.parseInt(jTextFieldIDBook.getText()));
                            if ((Quantity <= (int) jSpinnerIncreaseQuantity.getNextValue() - 1)) {
                            */
                            int Quantity = b.getBook(Integer.parseInt(jTextFieldIDBook.getText())).getNoOfBooks();
                            System.out.println("The Quan : "+Quantity);
                            if((Quantity >= (int) jSpinnerIncreaseQuantity.getNextValue() - 1)){
                                jSpinnerDecreaseQuanatity.setEnabled(true);
                                if(!Dublicate_BookID(jTextFieldIDBook.getText())){
                                    Book_Count.add((int) jSpinnerIncreaseQuantity.getNextValue()-1);
                                    jComboBoxItems.addItem(jTextFieldIDBook.getText());
                                }else{
                                    setDublicate(jTextFieldIDBook.getText(), (int) jSpinnerIncreaseQuantity.getNextValue()-1);
                                }
                                jTextFieldIDBook.setText("");
                                jSpinnerIncreaseQuantity.setValue(0);
                                jSpinnerDecreaseQuanatity.setValue(0);
                            }
                            else{
                                  jLabelSuccessOrFail.setText("you Can't put more Than +"+ Quantity+" :(");
                                  JOptionPane.showMessageDialog(null, "you Can't put more Than +"+ Quantity+" Try Again :("); 
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Not Found Book ID :(");
                            JOptionPane.showMessageDialog(null, "Not Found Book ID Try Again :("); 
                        }
                    }
                    else{
                        jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Add :(");
                        JOptionPane.showMessageDialog(null, "Not valid Quantinty for Add Positive Int Try Again :(");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Not valid Stock ID Try Again :(\nHint: Stocj ID Length should more than 4 .. ;)");
                    jLabelSuccessOrFail.setText("Not valid Stock ID Try Again :(");
                }
            }
            else
                jLabelSuccessOrFail.setText("Missing Required Fields ... !  Please, complete them before ADD ...! :(");
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jLabelAddItemMouseClicked

    private void jLabelAddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddItemMouseEntered
        // TODO add your handling code here:
        jPanelAddItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelAddItemMouseEntered

    private void jLabelAddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAddItemMouseExited
        // TODO add your handling code here:
        jPanelAddItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelAddItemMouseExited

    private void jPanelAddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelAddItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(!jTextFieldIDBook.getText().equals(""))
            {
                if(new Validation().checkID(jTextFieldIDBook.getText())){
                    if(((int)jSpinnerIncreaseQuantity.getNextValue()-1)>0){
                        Book b = new Book();
                        if(b.SearchFor(Integer.parseInt(jTextFieldIDBook.getText()))){
                            int Quantity = b.getBook(Integer.parseInt(jTextFieldIDBook.getText())).getNoOfBooks();
                            if((Quantity>=(int)jSpinnerIncreaseQuantity.getNextValue()-1)){
                                jSpinnerDecreaseQuanatity.setEnabled(true);
                                if(!Dublicate_BookID(jTextFieldIDBook.getText())){
                                    Book_Count.add((int) jSpinnerIncreaseQuantity.getNextValue()-1);
                                    jComboBoxItems.addItem(jTextFieldIDBook.getText());
                                }else{
                                    setDublicate(jTextFieldIDBook.getText(), (int) jSpinnerIncreaseQuantity.getNextValue()-1);
                                }
                                jTextFieldIDBook.setText("");
                                jSpinnerIncreaseQuantity.setValue(0);
                                jSpinnerDecreaseQuanatity.setValue(0);
                            }
                            else{
                                  jLabelSuccessOrFail.setText("you Can't put more Than +"+ Quantity+" :(");
                                  JOptionPane.showMessageDialog(null, "you Can't put more Than +"+ Quantity+" Try Again :("); 
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Not Found Book ID :(");
                            JOptionPane.showMessageDialog(null, "Not Found Book ID Try Again :("); 
                        }
                    }
                    else{
                        jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Add :(");
                        JOptionPane.showMessageDialog(null, "Not valid Quantinty for Add Positive Int Try Again :(");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Not valid Stock ID Try Again :(\nHint: Stocj ID Length should more than 4 .. ;)");
                    jLabelSuccessOrFail.setText("Not valid Stock ID Try Again :(");
                }
            }
            else
                jLabelSuccessOrFail.setText("Missing Required Fields ... !  Please, complete them before ADD ...! :(");
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jPanelAddItemMouseClicked

    private void jPanelAddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelAddItemMouseEntered
        // TODO add your handling code here:
        jPanelAddItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelAddItemMouseEntered

    private void jPanelAddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelAddItemMouseExited
        // TODO add your handling code here:
        jPanelAddItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelAddItemMouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(((int)jSpinnerDecreaseQuanatity.getNextValue()-1)>=0){
                if(Book_Count.size()>0){
                    int NewVal=(Book_Count.get(jComboBoxItems.getSelectedIndex())-((int)jSpinnerDecreaseQuanatity.getNextValue()-1));
                     if(NewVal>0){
                         Book_Count.set(jComboBoxItems.getSelectedIndex(), NewVal);
                         jTextFieldAddListQuantity.setText(""+NewVal);
                     }
                     else if(NewVal==0){
                         JOptionPane.showMessageDialog(null, "Item "+jComboBoxItems.getSelectedItem()+" is Removed :(");
                         Book_Count.remove(jComboBoxItems.getSelectedIndex());
                         jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem()); 
                         //Item--;
                     }
                     else{
                         jLabelSuccessOrFail.setText("Enter Number Between [ 0,"+Book_Count.get(jComboBoxItems.getSelectedIndex())+" ] :(");
                         JOptionPane.showMessageDialog(null, "Not Valid Enter Number Between [ 0,"+Book_Count.get(jComboBoxItems.getSelectedIndex())+" ] + Try Again :(");
                     }
                     if(Book_Count.size()==0){
                         jSpinnerDecreaseQuanatity.setEnabled(false);
                         jComboBoxItems.setEnabled(false);
                         JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :("); 
                        // jTextFieldRemoveItem.setEditable(false);
                     }
                     jTextFieldIDBook.setText("");
                     jSpinnerIncreaseQuantity.setValue(0);
                     jSpinnerDecreaseQuanatity.setValue(0);
                 }
                 else{
                     jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                     JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
                }
            }
            else{
                jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Remove :(");
                JOptionPane.showMessageDialog(null, "Not valid Quantinty for Remove Positive Int Try Again :(");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        // TODO add your handling code here:
        jPanelDecreaseQuantity.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        // TODO add your handling code here:
        jPanelDecreaseQuantity.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabel1MouseExited

    private void jPanelDecreaseQuantityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseQuantityMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(((int)jSpinnerIncreaseQuantity.getNextValue()-1)>0){
                if(Book_Count.size()>0){
                    int NewVal=(Book_Count.get(jComboBoxItems.getSelectedIndex())-((int)jSpinnerDecreaseQuanatity.getNextValue()-1));
                     if(NewVal>0){
                         Book_Count.set(jComboBoxItems.getSelectedIndex(), NewVal);
                         jTextFieldAddListQuantity.setText(""+NewVal);
                     }
                     else if(NewVal==0){
                         JOptionPane.showMessageDialog(null, "Item "+jComboBoxItems.getSelectedItem()+" is Removed :(");
                         Book_Count.remove(jComboBoxItems.getSelectedIndex());
                         jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem()); 
                         //Item--;
                     }
                     else{
                         jLabelSuccessOrFail.setText("Enter Number Between [ 0,"+Book_Count.get(jComboBoxItems.getSelectedIndex())+" ] :(");
                         JOptionPane.showMessageDialog(null, "Not Valid Enter Number Between [ 0,"+Book_Count.get(jComboBoxItems.getSelectedIndex())+" ] + Try Again :(");
                     }
                     if(Book_Count.size()==0){
                         jSpinnerDecreaseQuanatity.setEnabled(false);
                         jComboBoxItems.setEnabled(false);
                         JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :("); 
                        // jTextFieldRemoveItem.setEditable(false);
                     }
                     jTextFieldIDBook.setText("");
                     jSpinnerIncreaseQuantity.setValue(0);
                     jSpinnerDecreaseQuanatity.setValue(0);
                 }
                 else{
                     jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                     JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
                }
            }
            else{
                jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Remove :(");
                JOptionPane.showMessageDialog(null, "Not valid Quantinty for Remove Positive Int Try Again :(");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jPanelDecreaseQuantityMouseClicked

    private void jPanelDecreaseQuantityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseQuantityMouseEntered
        // TODO add your handling code here:
        jPanelDecreaseQuantity.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelDecreaseQuantityMouseEntered

    private void jPanelDecreaseQuantityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseQuantityMouseExited
        // TODO add your handling code here:
        jPanelDecreaseQuantity.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelDecreaseQuantityMouseExited

    private void jPanelRemoveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            Book book = new Book();
            if(Book_Count.size()>0){
                Book_Count.remove(jComboBoxItems.getSelectedIndex());
                jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem());
                //Item--;
                if(Book_Count.size()==0){
                    jSpinnerDecreaseQuanatity.setEnabled(false);
                    jComboBoxItems.setEditable(false);
                    JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :("); 
                }
                jSpinnerIncreaseQuantity.setValue(0);
                jSpinnerDecreaseQuanatity.setValue(0);
                jTextFieldIDBook.setText("");
                jTextFieldAddListQuantity.setText("");
            }else{
                jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jPanelRemoveItemMouseClicked

    private void jPanelRemoveItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseEntered
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelRemoveItemMouseEntered

    private void jPanelRemoveItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseExited
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelRemoveItemMouseExited

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            Book book = new Book();
            if(Book_Count.size()>0){
                Book_Count.remove(jComboBoxItems.getSelectedIndex());
                jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem());
                //Item--;
                if(Book_Count.size()==0){
                    jSpinnerDecreaseQuanatity.setEnabled(false);
                    jComboBoxItems.setEditable(false);
                    JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :("); 
                }
                jSpinnerIncreaseQuantity.setValue(0);
                jSpinnerDecreaseQuanatity.setValue(0);
                jTextFieldIDBook.setText("");
                jTextFieldAddListQuantity.setText("");
            }else{
                jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabel11MouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(jComboBoxItems.getItemCount()!=0){
                if(Book_Count.size()>0){
                    Client c = new Client();
                    c = (Client) c.get(jTextFieldEmail.getText(),jPasswordFieldPass.getText());
                    if(c!=null){
                        Transaction trans = new Transaction();
                        trans.client = c;
                        int BookID[] = new int[Book_Count.size()];
                        int Count_Quantity[] = new int[Book_Count.size()];
                        //(Integer.parseInt(jComboBoxItems.getItemAt(i))
                        for(int i=0;i<Book_Count.size();i++){
                            System.out.println("Item : "+jComboBoxItems.getItemAt(i));
                            trans.setBook(Integer.parseInt(jComboBoxItems.getItemAt(i)), new Book().getBook((Integer.parseInt(jComboBoxItems.getItemAt(i)))).getSalary(), Book_Count.get(i),new Book().getBook((Integer.parseInt(jComboBoxItems.getItemAt(i)))).getNameBook());
                            
                            BookID[i]=Integer.parseInt(jComboBoxItems.getItemAt(i));
                            Count_Quantity[i]=(Book_Count.get(i));
                        }
                        
                        trans.setCash(trans.getCash()+trans.Calc_Total(BookID, Count_Quantity));
                        System.out.println("Cash : "+trans.getCash()+"\nCash: "+trans.getCash()+trans.Calc_Total(BookID, Count_Quantity));
                        if( new Book().specificQuantityDec(BookID,Count_Quantity)){
                            if(trans.Edit(trans.client.getID())){
                                printer(trans);
                                jTextFieldSalary.setText(""+trans.Calc_Total(BookID, Count_Quantity));
                                resetPanel();
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Never Change in Quantity :(");
                            JOptionPane.showMessageDialog(null, "Never Change in Quantity Try Again :(");
                        }
                        
                    }
                    else{
                        jLabelSuccessOrFail.setText("Not Found Client  :(");
                        JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                    }
                }
                else{
                    jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        // TODO add your handling code here:
        jPanelBuyingBooks.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        // TODO add your handling code here:
        jPanelBuyingBooks.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabel4MouseExited

    private void jPanelBuyingBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuyingBooksMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldEmail.isEditable()&&!jPasswordFieldPass.isEditable())
        {
            if(jComboBoxItems.getItemCount()!=0){
                if(Book_Count.size()>0){
                    Client c = new Client();
                    c = (Client) c.get(jTextFieldEmail.getText(),jPasswordFieldPass.getText());
                    if(c!=null){
                        Transaction trans = new Transaction();
                        trans.client = c;
                        int BookID[] = new int[Book_Count.size()];
                        int Count_Quantity[] = new int[Book_Count.size()];
                        
                        for(int i=0;i<Book_Count.size();i++){
                            System.out.println("Item : "+jComboBoxItems.getItemAt(i));
                            trans.setBook(Integer.parseInt(jComboBoxItems.getItemAt(i)), new Book().getBook((Integer.parseInt(jComboBoxItems.getItemAt(i)))).getSalary(), Book_Count.get(i),new Book().getBook((Integer.parseInt(jComboBoxItems.getItemAt(i)))).getNameBook());
                            BookID[i]=Integer.parseInt(jComboBoxItems.getItemAt(i));
                            Count_Quantity[i]=(Book_Count.get(i));
                        }
                        
                        trans.setCash(trans.getCash()+trans.Calc_Total(BookID, Count_Quantity));
                        System.out.println("Cash : "+trans.getCash()+"\nCash: "+trans.getCash()+trans.Calc_Total(BookID, Count_Quantity));
                        if( new Book().specificQuantityDec(BookID,Count_Quantity)){
                            if(trans.Edit(trans.client.getID())){
                                printer(trans);
                                jTextFieldSalary.setText(""+trans.Calc_Total(BookID, Count_Quantity));
                                resetPanel();
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Never Change in Quantity :(");
                            JOptionPane.showMessageDialog(null, "Never Change in Quantity Try Again :(");
                        }
                        
                    }
                    else{
                        jLabelSuccessOrFail.setText("Not Found Client  :(");
                        JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                    }
                }
                else{
                    jLabelSuccessOrFail.setText("Not Found Item in your Basket Purchases  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Item in your Basket Purchases  Try Again :("); 
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Missing Required Authority ... !  Please, complete them before ADD ...! :(");
            jLabelSuccessOrFail.setText("Missing Required Authority ... !  Please, complete them before ADD ...! :(");
        }
    }//GEN-LAST:event_jPanelBuyingBooksMouseClicked

    private void jPanelBuyingBooksMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuyingBooksMouseEntered
        // TODO add your handling code here:
        jPanelBuyingBooks.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelBuyingBooksMouseEntered

    private void jPanelBuyingBooksMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelBuyingBooksMouseExited
        // TODO add your handling code here:
        jPanelBuyingBooks.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelBuyingBooksMouseExited

    private void jTextFieldAddListQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddListQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAddListQuantityActionPerformed
    private boolean Dublicate_BookID(String ID )
    {
        for(int i=0 ; i<jComboBoxItems.getItemCount(); i++)
            if(jComboBoxItems.getItemAt(i).equals(ID))
                return true;
        return false;
    }
    private void setDublicate(String ID , int Count)
    {
        for(int i=0 ; i<jComboBoxItems.getItemCount(); i++)
            if(jComboBoxItems.getItemAt(i).equals(ID)){
                int lastCount = Book_Count.get(i);
                Book_Count.set(i, Count+lastCount);
                jTextFieldAddListQuantity.setText(""+Book_Count.get(i));
                jComboBoxItems.setSelectedIndex(i);
                break;
            }
    }
    private void EnableComponant()
    {
        jTextFieldEmail.setEditable(false);jPasswordFieldPass.setEditable(false);
        jTextFieldIDBook.setEditable(true);
        jSpinnerDecreaseQuanatity.setEnabled(true);
        jSpinnerIncreaseQuantity.setEnabled(true);
    }
    private void DisbleComponant()
    {
        jTextFieldEmail.setEditable(true);jPasswordFieldPass.setEditable(true);
        jTextFieldIDBook.setEditable(false);
        jSpinnerDecreaseQuanatity.setEnabled(false);
        jSpinnerIncreaseQuantity.setEnabled(false);
    }
    private void resetPanel()
    {
        DisbleComponant();
        jPanelWrongPassword.setVisible(false);
        jPanelWrongEmail.setVisible(false);
        jSpinnerDecreaseQuanatity.setValue(0);jSpinnerDecreaseQuanatity.setValue(0);
        jTextFieldEmail.setText("");
        jTextFieldIDBook.setText("");
        jPasswordFieldPass.setText("");
        jTextFieldSalary.setText("");
        jTextFieldAddListQuantity.setText("");
        jComboBoxItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        
    }
    private void resetTable()
     {
         try{
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            while(jTable1.getRowCount()>0){
                for(int i=0;i<jTable1.getRowCount();i++)
                    model.removeRow(i);
            }
            model.removeRow(0);
        }
        catch(Exception e)
        {
            ;
        }
     }
   private void printer(Transaction c)
    {
            Document doc = new Document();
            try {
                try {
                    String path = c.getClient().getID()+" Report.pdf";
                    PdfWriter.getInstance(doc, new FileOutputStream(path));
                    System.out.println("Create Pdf :)");
                    } catch (FileNotFoundException ex) {
                    Logger.getLogger(Printer.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("problem in printing : Youssef");
                    }
                    doc.open();
                    Transaction a = new Transaction();
                    String sepreted[]=jComboBoxItems.getSelectedObjects().toString().split(" ");
                    System.out.println(" Done !");
                    doc.add(new Paragraph("Name of Customer : "+c.client.getName()+",              Email : "+c.client.getEmail()+"\nPhone No : "+c.client.getPhoneNo()+"\n\n"));
                    ArrayList<Integer> IDBooks = c.getBooks_ID();ArrayList<String> NameBooks = c.getBooksName();
                    for(int i=0;i<Book_Count.size();i++){
                        doc.add(new Paragraph("Name "+NameBooks.get(i) + ",         Quantity : "+Book_Count.get(i)+",           Salary : "
                                               +a.Calc_Item((IDBooks.get(i)), Book_Count.get(i))));
                    }
                        doc.add(new Paragraph("\n-------------------------------------------------------"
                                + "\n                    Total : "+c.Calc_Total(c.Books_ID,c.Books_No)));
                    doc.addTitle("Billing ...!");
                    doc.addAuthor("Manager: Youssef F.Rashad");
                    doc.addCreationDate();
                    jLabelSuccessOrFail.setText(" Done ... !");
                    doc.close();
            } catch (DocumentException ex) {
                System.out.println("problem in printing : Youssef");
                Logger.getLogger(Printer.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxItems;
    private javax.swing.JComboBox<String> jComboBoxNameOfCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAddItem;
    private javax.swing.JLabel jLabelLogIn;
    private javax.swing.JLabel jLabelOk;
    private javax.swing.JLabel jLabelReset;
    private javax.swing.JLabel jLabelSuccessOrFail;
    private javax.swing.JLabel jLabelWrongEmail;
    private javax.swing.JLabel jLabelWrongPassword;
    private javax.swing.JPanel jPanelAddItem;
    private javax.swing.JPanel jPanelBuyingBooks;
    private javax.swing.JPanel jPanelDecreaseQuantity;
    private javax.swing.JPanel jPanelLogIn;
    private javax.swing.JPanel jPanelOk;
    private javax.swing.JPanel jPanelRemoveItem;
    private javax.swing.JPanel jPanelReset;
    private javax.swing.JPanel jPanelWrongEmail;
    private javax.swing.JPanel jPanelWrongPassword;
    private javax.swing.JPasswordField jPasswordFieldPass;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerDecreaseQuanatity;
    private javax.swing.JSpinner jSpinnerIncreaseQuantity;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldAddListQuantity;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldIDBook;
    private javax.swing.JTextField jTextFieldSalary;
    // End of variables declaration//GEN-END:variables
}
