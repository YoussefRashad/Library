/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame.Panel;

import DataFile.Transaction;
import Safety.Validation;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import DataFile.Book;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.print.Printer;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class ReturnBook extends javax.swing.JPanel {

    /**
     * Creates new form BuyingBook
     */
    private ArrayList<Integer> Books_IDRemoveReturn = new ArrayList<Integer>();
    private ArrayList<Integer> Books_CountReturn = new ArrayList<Integer>();
    private ArrayList<Integer> Books_Count = new ArrayList<Integer>();
    private ArrayList<Integer> Books_CountRemoveReturn = new ArrayList<Integer>();

    public ReturnBook() {
        initComponents();
        jPanelWrongID.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldSearchKey = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxItems = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldAddListQuantity = new javax.swing.JTextField();
        jSpinnerRemove = new javax.swing.JSpinner();
        jTextFieldnewSalary = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabelSuccessOrFail = new javax.swing.JLabel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jPanelDecreaseItem = new javax.swing.JPanel();
        jLabelDecrease = new javax.swing.JLabel();
        jPanelReset = new javax.swing.JPanel();
        jLabelReset = new javax.swing.JLabel();
        jPanelRetrieve = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanelRemoveItem = new javax.swing.JPanel();
        jLabelRemoveItem = new javax.swing.JLabel();
        jPanelWrongID = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(105, 105, 105));

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("client ID");

        jTextFieldSearchKey.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jTextFieldSearchKey.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldSearchKey.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BookIDs");

        jComboBoxItems.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jComboBoxItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        jComboBoxItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxItemsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("quantity");

        jTextFieldAddListQuantity.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jTextFieldAddListQuantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldAddListQuantity.setBorder(null);

        jSpinnerRemove.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N

        jTextFieldnewSalary.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jTextFieldnewSalary.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldnewSalary.setBorder(null);
        jTextFieldnewSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldnewSalaryActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("new price");

        jLabelSuccessOrFail.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelSuccessOrFail.setForeground(new java.awt.Color(255, 255, 255));
        jLabelSuccessOrFail.setText("Buying Books ...!");

        jPanelSearch.setBackground(new java.awt.Color(105, 105, 105));
        jPanelSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelSearchMouseExited(evt);
            }
        });

        jLabelSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Search_48px.png"))); // NOI18N
        jLabelSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSearchMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelSearchMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelSearch)
                .addGap(10, 10, 10))
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelSearch)
                .addGap(10, 10, 10))
        );

        jPanelDecreaseItem.setBackground(new java.awt.Color(105, 105, 105));
        jPanelDecreaseItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelDecreaseItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelDecreaseItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelDecreaseItemMouseExited(evt);
            }
        });

        jLabelDecrease.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelDecrease.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Minus_35px.png"))); // NOI18N
        jLabelDecrease.setText("Decrease Quantity");
        jLabelDecrease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelDecreaseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelDecreaseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelDecreaseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelDecreaseItemLayout = new javax.swing.GroupLayout(jPanelDecreaseItem);
        jPanelDecreaseItem.setLayout(jPanelDecreaseItemLayout);
        jPanelDecreaseItemLayout.setHorizontalGroup(
            jPanelDecreaseItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecreaseItemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDecrease, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanelDecreaseItemLayout.setVerticalGroup(
            jPanelDecreaseItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDecreaseItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelDecrease)
                .addGap(10, 10, 10))
        );

        jPanelReset.setBackground(new java.awt.Color(105, 105, 105));
        jPanelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelResetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelResetMouseExited(evt);
            }
        });

        jLabelReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Reset_48px.png"))); // NOI18N
        jLabelReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelResetMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelResetMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelResetLayout = new javax.swing.GroupLayout(jPanelReset);
        jPanelReset.setLayout(jPanelResetLayout);
        jPanelResetLayout.setHorizontalGroup(
            jPanelResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResetLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelReset)
                .addGap(10, 10, 10))
        );
        jPanelResetLayout.setVerticalGroup(
            jPanelResetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResetLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelReset)
                .addGap(10, 10, 10))
        );

        jPanelRetrieve.setBackground(new java.awt.Color(105, 105, 105));
        jPanelRetrieve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelRetrieveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelRetrieveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelRetrieveMouseExited(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Monotype Corsiva", 0, 24)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Return_96px.png"))); // NOI18N
        jLabel10.setText("Retrive");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel10MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelRetrieveLayout = new javax.swing.GroupLayout(jPanelRetrieve);
        jPanelRetrieve.setLayout(jPanelRetrieveLayout);
        jPanelRetrieveLayout.setHorizontalGroup(
            jPanelRetrieveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRetrieveLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addGap(10, 10, 10))
        );
        jPanelRetrieveLayout.setVerticalGroup(
            jPanelRetrieveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRetrieveLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addGap(10, 10, 10))
        );

        jPanelRemoveItem.setBackground(new java.awt.Color(105, 105, 105));
        jPanelRemoveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanelRemoveItemMouseExited(evt);
            }
        });

        jLabelRemoveItem.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabelRemoveItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Clear_Symbol_35px.png"))); // NOI18N
        jLabelRemoveItem.setText("Remove Item");
        jLabelRemoveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRemoveItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelRemoveItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelRemoveItemMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelRemoveItemLayout = new javax.swing.GroupLayout(jPanelRemoveItem);
        jPanelRemoveItem.setLayout(jPanelRemoveItemLayout);
        jPanelRemoveItemLayout.setHorizontalGroup(
            jPanelRemoveItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRemoveItemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelRemoveItemLayout.setVerticalGroup(
            jPanelRemoveItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRemoveItemLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabelRemoveItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelWrongID.setBackground(new java.awt.Color(105, 105, 105));

        jLabel11.setFont(new java.awt.Font("Monotype Corsiva", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Cancel_20px.png"))); // NOI18N
        jLabel11.setText("Wrong ID");

        javax.swing.GroupLayout jPanelWrongIDLayout = new javax.swing.GroupLayout(jPanelWrongID);
        jPanelWrongID.setLayout(jPanelWrongIDLayout);
        jPanelWrongIDLayout.setHorizontalGroup(
            jPanelWrongIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongIDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanelWrongIDLayout.setVerticalGroup(
            jPanelWrongIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWrongIDLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel11)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Book ID", "Salary", "Qunatity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanelWrongID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)))
                        .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jPanelReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldAddListQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jSpinnerRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jPanelDecreaseItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jPanelRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelSuccessOrFail, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(188, Short.MAX_VALUE)
                .addComponent(jPanelRetrieve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldnewSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabelSuccessOrFail)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldSearchKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelWrongID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAddListQuantity, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelDecreaseItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelRetrieve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldnewSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxItemsActionPerformed
        
        try{
        if(Books_Count.size()!=0)
            jTextFieldAddListQuantity.setText(""+Books_Count.get(jComboBoxItems.getSelectedIndex()));
        }
        catch(Exception e){
            ;
        }
    }//GEN-LAST:event_jComboBoxItemsActionPerformed

    private void jLabelSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSearchMouseClicked
        // TODO add your handling code here:
        resetPanel();
        jComboBoxItems.removeAllItems();
        if (!jTextFieldSearchKey.getText().equals("")) {
            Validation v = new Validation();
            if (v.checkID(jTextFieldSearchKey.getText())) {
                Transaction client = new Transaction();
                client = client.getTransaction(Integer.parseInt(jTextFieldSearchKey.getText()));
                System.out.println(client);
                if (client!=null) {
                    jSpinnerRemove.setEnabled(true);
                    Books_Count  = client.getBooks_No();
                    int size = client.getBooks_No().size();
                    for(int i=0;i<size;i++)// 34an dh elly hyzod el No of Clothes flma yb2 b 0 hdyf el zyada w yzod 3lyh
                        Books_CountReturn.add(0);
                    setComboBox(client);
                    setTable(client);
                    jLabelSuccessOrFail.setText("Founded Client ;)");
                }
                else{
                    jLabelSuccessOrFail.setText("Not Found Client  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                    jPanelWrongID.setVisible(true);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Not valid ID Try Again :(");
                jPanelWrongID.setVisible(true);
            }
            
        }
        else
        jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jLabelSearchMouseClicked

    private void jLabelSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSearchMouseEntered
        // TODO add your handling code here:
        jPanelSearch.setBackground(new Color(0, 64, 128));
    }//GEN-LAST:event_jLabelSearchMouseEntered

    private void jLabelSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSearchMouseExited
        // TODO add your handling code here:
        jPanelSearch.setBackground(new Color(105, 105, 105));
    }//GEN-LAST:event_jLabelSearchMouseExited

    private void jPanelSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelSearchMouseClicked
        // TODO add your handling code here:
        resetPanel();
        jComboBoxItems.removeAllItems();
        if (!jTextFieldSearchKey.getText().equals("")) {
            Validation v = new Validation();
            if (v.checkID(jTextFieldSearchKey.getText())) {
                Transaction client = new Transaction();
                client = client.getTransaction(Integer.parseInt(jTextFieldSearchKey.getText()));
                System.out.println(client);
                if (client!=null) {
                    jSpinnerRemove.setEnabled(true);
                    Books_Count  = client.getBooks_No();
                    int size = client.getBooks_No().size();
                    for(int i=0;i<size;i++)// 34an dh elly hyzod el No of Clothes flma yb2 b 0 hdyf el zyada w yzod 3lyh
                        Books_CountReturn.add(0);
                    setComboBox(client);
                    setTable(client);
                    jLabelSuccessOrFail.setText("Founded Client ;)");
                }
                else{
                    jLabelSuccessOrFail.setText("Not Found Client  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Client Try Again :(");
                    jPanelWrongID.setVisible(true);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Not valid ID Try Again :(");
                jPanelWrongID.setVisible(true);
            }
            
        }
        else
        jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jPanelSearchMouseClicked

    private void jPanelSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelSearchMouseEntered
        // TODO add your handling code here:
        jPanelSearch.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelSearchMouseEntered

    private void jLabelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseClicked
        // TODO add your handling code here:
        resetTable();
        resetPanel();
        Books_IDRemoveReturn= new ArrayList<Integer>();
        Books_Count= new ArrayList<Integer>();
        Books_CountReturn= new ArrayList<Integer>();
        Books_CountRemoveReturn= new ArrayList<Integer>();
    }//GEN-LAST:event_jLabelResetMouseClicked

    private void jLabelResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseEntered
        // TODO add your handling code here:
        jPanelReset.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelResetMouseEntered

    private void jLabelResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelResetMouseExited
        // TODO add your handling code here:
        jPanelReset.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelResetMouseExited

    private void jPanelResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseClicked
        // TODO add your handling code here:
        resetTable();
        resetPanel();
        jTextFieldSearchKey.setText("");
        Books_IDRemoveReturn= new ArrayList<Integer>();
        Books_Count= new ArrayList<Integer>();
        Books_CountReturn= new ArrayList<Integer>();
        Books_CountRemoveReturn= new ArrayList<Integer>();
    }//GEN-LAST:event_jPanelResetMouseClicked

    private void jPanelResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseEntered
        // TODO add your handling code here:
        jPanelReset.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelResetMouseEntered

    private void jPanelResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelResetMouseExited
        // TODO add your handling code here:
        jPanelReset.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelResetMouseExited

    private void jLabelRemoveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRemoveItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            Transaction c = new Transaction();
            if(c.SearchFor(Integer.parseInt(jTextFieldSearchKey.getText()))){
                Books_IDRemoveReturn.add(Integer.parseInt(jComboBoxItems.getSelectedItem().toString()));
                Books_CountRemoveReturn.add(Integer.parseInt((jTextFieldAddListQuantity.getText())));
                jTextFieldAddListQuantity.setText("");
                //Clothes_CountReturn.set(jComboBoxItems.getSelectedIndex(),Clothes_Count.get(jComboBoxItems.getSelectedIndex()));
                Books_Count.remove(jComboBoxItems.getSelectedIndex());
                jComboBoxItems.removeItemAt(jComboBoxItems.getSelectedIndex());
            }else{
                jLabelSuccessOrFail.setText("Not Found Client :(");
                JOptionPane.showMessageDialog(null, "Not Found Cleint Try Again :(");
            }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required ID of Client ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jLabelRemoveItemMouseClicked

    private void jLabelRemoveItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRemoveItemMouseEntered
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelRemoveItemMouseEntered

    private void jLabelRemoveItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRemoveItemMouseExited
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelRemoveItemMouseExited

    private void jPanelRemoveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            Transaction c = new Transaction();
            if(c.SearchFor(Integer.parseInt(jTextFieldSearchKey.getText()))){
                Books_IDRemoveReturn.add(Integer.parseInt(jComboBoxItems.getSelectedItem().toString()));
                Books_CountRemoveReturn.add(Integer.parseInt((jTextFieldAddListQuantity.getText())));
                jTextFieldAddListQuantity.setText("");
                //Clothes_CountReturn.set(jComboBoxItems.getSelectedIndex(),Clothes_Count.get(jComboBoxItems.getSelectedIndex()));
                Books_Count.remove(jComboBoxItems.getSelectedIndex());
                jComboBoxItems.removeItemAt(jComboBoxItems.getSelectedIndex());
            }else{
                jLabelSuccessOrFail.setText("Not Found Client :(");
                JOptionPane.showMessageDialog(null, "Not Found Cleint Try Again :(");
            }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required ID of Client ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jPanelRemoveItemMouseClicked

    private void jPanelRemoveItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseEntered
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelRemoveItemMouseEntered

    private void jPanelRemoveItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRemoveItemMouseExited
        // TODO add your handling code here:
        jPanelRemoveItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelRemoveItemMouseExited

    private void jLabelDecreaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDecreaseMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            if(((int)jSpinnerRemove.getNextValue()-1)>0){
                Transaction c = new Transaction();
                if(c.SearchFor(Integer.parseInt(jTextFieldSearchKey.getText()))){
                    int NewVal=(Books_Count.get(jComboBoxItems.getSelectedIndex())-((int)jSpinnerRemove.getNextValue()-1));
                    if(NewVal>0){
                        Books_CountReturn.set(jComboBoxItems.getSelectedIndex(),((int)jSpinnerRemove.getNextValue()-1));
                        Books_Count.set(jComboBoxItems.getSelectedIndex(), NewVal);
                        jTextFieldAddListQuantity.setText(""+NewVal);
                    }
                    else if(NewVal==0){
                        JOptionPane.showMessageDialog(null, "Item "+jComboBoxItems.getSelectedItem()+" is Removed :(");
                        Books_IDRemoveReturn.add(Integer.parseInt(jComboBoxItems.getSelectedItem().toString()));
                        Books_CountRemoveReturn.add(Integer.parseInt(jTextFieldAddListQuantity.getText()));
                        jTextFieldAddListQuantity.setText("");
                        Books_Count.remove(jComboBoxItems.getSelectedIndex());
                        jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem());
                    }
                    else{
                        jLabelSuccessOrFail.setText("Enter Number Between [ 0,"+Books_Count.get(jComboBoxItems.getSelectedIndex())+" ] :(");
                        JOptionPane.showMessageDialog(null, "Not Valid Enter Number Between [ 0,"+Books_Count.get(jComboBoxItems.getSelectedIndex())+" ] + Try Again :(");
                    }
                    
                    if(jComboBoxItems.getItemCount()==0){
                        jSpinnerRemove.setEnabled(false);
                        jComboBoxItems.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :(");
                    }
                    jSpinnerRemove.setValue(0);
                    
                }else{
                    jLabelSuccessOrFail.setText("Not Found Customer  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Customer Try Again :(");
                }
            }else{
                jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Remove :(");
                JOptionPane.showMessageDialog(null, "Not valid Quantinty for Remove Positive Int Try Again :(");
            }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jLabelDecreaseMouseClicked

    private void jLabelDecreaseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDecreaseMouseEntered
        // TODO add your handling code here:
        jPanelDecreaseItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabelDecreaseMouseEntered

    private void jLabelDecreaseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelDecreaseMouseExited
        // TODO add your handling code here:
        jPanelDecreaseItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabelDecreaseMouseExited

    private void jPanelDecreaseItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseItemMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            if(((int)jSpinnerRemove.getNextValue()-1)>0){
                Transaction c = new Transaction();
                if(c.SearchFor(Integer.parseInt(jTextFieldSearchKey.getText()))){
                    int NewVal=(Books_Count.get(jComboBoxItems.getSelectedIndex())-((int)jSpinnerRemove.getNextValue()-1));
                    if(NewVal>0){
                        Books_CountReturn.set(jComboBoxItems.getSelectedIndex(),((int)jSpinnerRemove.getNextValue()-1));
                        Books_Count.set(jComboBoxItems.getSelectedIndex(), NewVal);
                        jTextFieldAddListQuantity.setText(""+NewVal);
                    }
                    else if(NewVal==0){
                        JOptionPane.showMessageDialog(null, "Item "+jComboBoxItems.getSelectedItem()+" is Removed :(");
                        Books_IDRemoveReturn.add(Integer.parseInt(jComboBoxItems.getSelectedItem().toString()));
                        Books_CountRemoveReturn.add(Integer.parseInt(jTextFieldAddListQuantity.getText()));
                        jTextFieldAddListQuantity.setText("");
                        Books_Count.remove(jComboBoxItems.getSelectedIndex());
                        jComboBoxItems.removeItem(jComboBoxItems.getSelectedItem());
                    }
                    else{
                        jLabelSuccessOrFail.setText("Enter Number Between [ 0,"+Books_Count.get(jComboBoxItems.getSelectedIndex())+" ] :(");
                        JOptionPane.showMessageDialog(null, "Not Valid Enter Number Between [ 0,"+Books_Count.get(jComboBoxItems.getSelectedIndex())+" ] + Try Again :(");
                    }
                    
                    if(jComboBoxItems.getItemCount()==0){
                        jSpinnerRemove.setEnabled(false);
                        jComboBoxItems.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "Not Found Items in your Basket Purchases :(");
                    }
                    jSpinnerRemove.setValue(0);
                    
                }else{
                    jLabelSuccessOrFail.setText("Not Found Customer  :(");
                    JOptionPane.showMessageDialog(null, "Not Found Customer Try Again :(");
                }
            }else{
                jLabelSuccessOrFail.setText("Enter Positive Number in Qunatity for Remove :(");
                JOptionPane.showMessageDialog(null, "Not valid Quantinty for Remove Positive Int Try Again :(");
            }
        }
        else
            jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jPanelDecreaseItemMouseClicked

    private void jPanelDecreaseItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseItemMouseEntered
        // TODO add your handling code here:
        jPanelDecreaseItem.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelDecreaseItemMouseEntered

    private void jPanelDecreaseItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDecreaseItemMouseExited
        // TODO add your handling code here:
        jPanelDecreaseItem.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelDecreaseItemMouseExited

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            if(jTable1.getRowCount()!=0){
                    Transaction c = new Transaction();
                    c = c.getTransaction(Integer.parseInt(jTextFieldSearchKey.getText()));
                    if(c!=null){
                        c.removeAllBooksAndNo();
                        int StockID[] = new int[jComboBoxItems.getItemCount()];
                        int Count_Quantity[] = new int[jComboBoxItems.getItemCount()];
                        
                        c.BooksName = new ArrayList<String>();
                        c.Books_No = new ArrayList<Integer>();
                        c.Books_Salary = new ArrayList<Double>();
                        c.Books_ID = new ArrayList<Integer>();
                        
                        for(int i=0;i<jComboBoxItems.getItemCount();i++){
                            c.setBook(Integer.parseInt(jComboBoxItems.getItemAt(i)), new Book().getBook(Integer.parseInt(jComboBoxItems.getItemAt(i))).getSalary(), Books_Count.get(i),new Book().getBook(Integer.parseInt(jComboBoxItems.getItemAt(i))).getNameBook());
                                
                            StockID[i]=Integer.parseInt(jComboBoxItems.getItemAt(i));
                            Count_Quantity[i]=(Books_Count.get(i));
                        }
                        
                        c.setCash(new Transaction().Calc_Total(StockID, Count_Quantity));
                       
                        int []arrReturn = new int[Books_CountReturn.size()];
                        int []StockIDRemoveReturn = new int[Books_IDRemoveReturn.size()];
                        int []CountRemoveReturn = new int[Books_CountRemoveReturn.size()];
                        for(int i=0;i<Books_CountRemoveReturn.size();i++)
                            arrReturn[i]=Books_CountRemoveReturn.get(i);
                        for(int i=0;i<Books_IDRemoveReturn.size();i++)
                            StockIDRemoveReturn[i]=(Books_IDRemoveReturn.get(i));
                        for(int i=0;i<Books_CountRemoveReturn.size();i++)
                            CountRemoveReturn[i]=Books_CountRemoveReturn.get(i);
                        
                        System.err.println(Arrays.toString(arrReturn)+"\t"+Books_CountReturn.toString());
                        if(new Transaction().specificQuantityDec(StockID, arrReturn)&&new Book().specificQuantityInc(StockIDRemoveReturn,CountRemoveReturn)){
                            if(c.Edit(Integer.parseInt(jTextFieldSearchKey.getText()))){
                                printer(c);
                                jTextFieldnewSalary.setText(""+new Transaction().Calc_Total(StockID, Count_Quantity));
                                resetPanel();
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Never Change in Quantity :(");
                            JOptionPane.showMessageDialog(null, "Never Change in Quantity Try Again :(");
                        }
                    }
                    else{
                        jLabelSuccessOrFail.setText("Not Found Client  :(");
                        JOptionPane.showMessageDialog(null, "Not Found Customer Try Again :(");
                    }
            }
            else{
                jLabelSuccessOrFail.setText("Not Exsit Category in System :(");
                JOptionPane.showMessageDialog(null, "Not Exsit Category in System Try Again :(");
            }
        }else
        jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        // TODO add your handling code here:
        jPanelRetrieve.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseExited
        // TODO add your handling code here:
        jPanelRetrieve.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jLabel10MouseExited

    private void jPanelRetrieveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRetrieveMouseClicked
        // TODO add your handling code here:
        if(!jTextFieldSearchKey.getText().equals("")){
            if(jTable1.getRowCount()!=0){
                    Transaction c = new Transaction();
                    c = c.getTransaction(Integer.parseInt(jTextFieldSearchKey.getText()));
                    if(c!=null){
                        c.removeAllBooksAndNo();
                        int StockID[] = new int[jComboBoxItems.getItemCount()];
                        int Count_Quantity[] = new int[jComboBoxItems.getItemCount()];
                        
                        c.BooksName = new ArrayList<String>();
                        c.Books_No = new ArrayList<Integer>();
                        c.Books_Salary = new ArrayList<Double>();
                        c.Books_ID = new ArrayList<Integer>();
                        
                        for(int i=0;i<jComboBoxItems.getItemCount();i++){
                            c.setBook(Integer.parseInt(jComboBoxItems.getItemAt(i)), new Book().getBook(Integer.parseInt(jComboBoxItems.getItemAt(i))).getSalary(), Books_Count.get(i),new Book().getBook(Integer.parseInt(jComboBoxItems.getItemAt(i))).getNameBook());
                                
                            StockID[i]=Integer.parseInt(jComboBoxItems.getItemAt(i));
                            Count_Quantity[i]=(Books_Count.get(i));
                        }
                        
                        c.setCash(new Transaction().Calc_Total(StockID, Count_Quantity));
                       
                        int []arrReturn = new int[Books_CountReturn.size()];
                        int []StockIDRemoveReturn = new int[Books_IDRemoveReturn.size()];
                        int []CountRemoveReturn = new int[Books_CountRemoveReturn.size()];
                        for(int i=0;i<Books_CountRemoveReturn.size();i++)
                            arrReturn[i]=Books_CountRemoveReturn.get(i);
                        for(int i=0;i<Books_IDRemoveReturn.size();i++)
                            StockIDRemoveReturn[i]=(Books_IDRemoveReturn.get(i));
                        for(int i=0;i<Books_CountRemoveReturn.size();i++)
                            CountRemoveReturn[i]=Books_CountRemoveReturn.get(i);
                        
                        System.err.println(Arrays.toString(arrReturn)+"\t"+Books_CountReturn.toString());
                        if(new Book().specificQuantityInc(StockID, arrReturn)&&new Book().specificQuantityInc(StockIDRemoveReturn,CountRemoveReturn)){
                            if(c.Edit(Integer.parseInt(jTextFieldSearchKey.getText()))){
                                printer(c);
                                jTextFieldnewSalary.setText(""+new Transaction().Calc_Total(StockID, Count_Quantity));
                                resetPanel();
                            }
                        }
                        else{
                            jLabelSuccessOrFail.setText("Never Change in Quantity :(");
                            JOptionPane.showMessageDialog(null, "Never Change in Quantity Try Again :(");
                        }
                    }
                    else{
                        jLabelSuccessOrFail.setText("Not Found Client  :(");
                        JOptionPane.showMessageDialog(null, "Not Found Customer Try Again :(");
                    }
            }
            else{
                jLabelSuccessOrFail.setText("Not Exsit Category in System :(");
                JOptionPane.showMessageDialog(null, "Not Exsit Category in System Try Again :(");
            }
        }else
        jLabelSuccessOrFail.setText("Missing Required Name of Customer ... !  Please, complete it before submit ...! :(");
    }//GEN-LAST:event_jPanelRetrieveMouseClicked

    private void jPanelRetrieveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRetrieveMouseEntered
        // TODO add your handling code here:
        jPanelRetrieve.setBackground(new java.awt.Color(0, 64, 128));
    }//GEN-LAST:event_jPanelRetrieveMouseEntered

    private void jPanelRetrieveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelRetrieveMouseExited
        // TODO add your handling code here:
        jPanelRetrieve.setBackground(new Color(105,105,105));
    }//GEN-LAST:event_jPanelRetrieveMouseExited

    private void jTextFieldnewSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldnewSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldnewSalaryActionPerformed

    private void jPanelSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelSearchMouseExited
        // TODO add your handling code here:
        jPanelSearch.setBackground(new java.awt.Color(105,105,105));
    }//GEN-LAST:event_jPanelSearchMouseExited
    private void setComboBox(Transaction c)
    {

        for(int i=0;i<c.getBooks_ID().size();i++)
        {
            jComboBoxItems.addItem(String.valueOf(c.getBooks_ID().get(i)));
        }
    }
    
    private void setTable(Transaction c)
     {
         resetTable();
         ArrayList<Transaction> arr = new ArrayList<Transaction>();
         Transaction re = new Transaction();
         for(int i=0;i<c.Books_ID.size();i++)
             arr.add(re.returnInfoItem(c.Books_ID.get(i)));
         
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[4];
        for(int i=0;i<arr.size();i++)
        {
            for(int j=0;j<arr.get(i).Books_ID.size();j++)
            {
                rowData [0]=arr.get(i).Books_ID.get(j);
                rowData [1]=arr.get(i).BooksName.get(j);
                rowData [2]=arr.get(i).Books_Salary.get(j);
                rowData [3]=arr.get(i).Books_No.get(j);
                model.addRow(rowData);
            }
        }
    }
    
    private void resetTable()
     {
         try{
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            while(jTable1.getRowCount()>0){
                for(int i=0;i<jTable1.getRowCount();i++)
                    model.removeRow(i);
            }
            model.removeRow(0);
        }
        catch(Exception e)
        {
            ;
        }
     }
    private void resetPanel() {
        jPanelWrongID.setVisible(false);
        jSpinnerRemove.setValue(0);
        jTextFieldAddListQuantity.setText("");
        jLabelSuccessOrFail.setText("Return Book!");
        jComboBoxItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));

    }
    private void printer(Transaction c)
    {
            Document doc = new Document();
            try {
                try {
                    String path = jTextFieldSearchKey.getText()+" Report.pdf";
                    PdfWriter.getInstance(doc, new FileOutputStream(path));
                    System.out.println("Create Pdf :)");
                    } catch (FileNotFoundException ex) {
                    Logger.getLogger(Printer.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("problem in printing : Youssef");
                    }
                    doc.open();
                    Transaction a = new Transaction();
                    String sepreted[]=jComboBoxItems.getSelectedObjects().toString().split(" ");
                    System.out.println(" Done !");
                    doc.add(new Paragraph("Name of Customer : "+c.client.getName()+",              Email : "+c.client.getEmail()+"\nPhone No : "+c.client.getPhoneNo()+"\n\n"));
                    ArrayList<Integer> IDBooks = c.getBooks_ID();ArrayList<String> NameBooks = c.getBooksName();
                    for(int i=0;i<Books_Count.size();i++){
                        doc.add(new Paragraph("Name "+NameBooks.get(i) + ",         Quantity : "+Books_Count.get(i)+",           Salary : "
                                               +a.Calc_Item((IDBooks.get(i)), Books_Count.get(i))));
                    }
                        doc.add(new Paragraph("\n-------------------------------------------------------"
                                + "\n                    Total : "+c.Calc_Total(c.Books_ID,c.Books_No)));
                    doc.addTitle("Billing ...!");
                    doc.addAuthor("Manager: Youssef F.Rashad");
                    doc.addCreationDate();
                    jLabelSuccessOrFail.setText(" Done ... !");
                    doc.close();
            } catch (DocumentException ex) {
                System.out.println("problem in printing : Youssef");
                Logger.getLogger(Printer.class.getName()).log(Level.SEVERE, null, ex);
            }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxItems;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelDecrease;
    private javax.swing.JLabel jLabelRemoveItem;
    private javax.swing.JLabel jLabelReset;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSuccessOrFail;
    private javax.swing.JPanel jPanelDecreaseItem;
    private javax.swing.JPanel jPanelRemoveItem;
    private javax.swing.JPanel jPanelReset;
    private javax.swing.JPanel jPanelRetrieve;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelWrongID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerRemove;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldAddListQuantity;
    private javax.swing.JTextField jTextFieldSearchKey;
    private javax.swing.JTextField jTextFieldnewSalary;
    // End of variables declaration//GEN-END:variables
}
